// automatically generated by the FlatBuffers compiler, do not modify

/**
 * @const
 * @namespace
 */
var MyServer = MyServer || {};

/**
 * @const
 * @namespace
 */
MyServer.Payloads = MyServer.Payloads || {};

/**
 * @enum {number}
 */
MyServer.Payloads.AnyPayload = {
  NONE: 0,
  EchoRequest: 1,
  ReverseRequest: 2
};

/**
 * @enum {string}
 */
MyServer.Payloads.AnyPayloadName = {
  '0': 'NONE',
  '1': 'EchoRequest',
  '2': 'ReverseRequest'
};

/**
 * @constructor
 */
MyServer.Payloads.EchoRequest = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {MyServer.Payloads.EchoRequest}
 */
MyServer.Payloads.EchoRequest.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {MyServer.Payloads.EchoRequest=} obj
 * @returns {MyServer.Payloads.EchoRequest}
 */
MyServer.Payloads.EchoRequest.getRootAsEchoRequest = function(bb, obj) {
  return (obj || new MyServer.Payloads.EchoRequest).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {MyServer.Payloads.EchoRequest=} obj
 * @returns {MyServer.Payloads.EchoRequest}
 */
MyServer.Payloads.EchoRequest.getSizePrefixedRootAsEchoRequest = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new MyServer.Payloads.EchoRequest).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
MyServer.Payloads.EchoRequest.prototype.message = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
MyServer.Payloads.EchoRequest.startEchoRequest = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} messageOffset
 */
MyServer.Payloads.EchoRequest.addMessage = function(builder, messageOffset) {
  builder.addFieldOffset(0, messageOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
MyServer.Payloads.EchoRequest.endEchoRequest = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} messageOffset
 * @returns {flatbuffers.Offset}
 */
MyServer.Payloads.EchoRequest.createEchoRequest = function(builder, messageOffset) {
  MyServer.Payloads.EchoRequest.startEchoRequest(builder);
  MyServer.Payloads.EchoRequest.addMessage(builder, messageOffset);
  return MyServer.Payloads.EchoRequest.endEchoRequest(builder);
}

/**
 * @constructor
 */
MyServer.Payloads.ReverseRequest = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {MyServer.Payloads.ReverseRequest}
 */
MyServer.Payloads.ReverseRequest.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {MyServer.Payloads.ReverseRequest=} obj
 * @returns {MyServer.Payloads.ReverseRequest}
 */
MyServer.Payloads.ReverseRequest.getRootAsReverseRequest = function(bb, obj) {
  return (obj || new MyServer.Payloads.ReverseRequest).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {MyServer.Payloads.ReverseRequest=} obj
 * @returns {MyServer.Payloads.ReverseRequest}
 */
MyServer.Payloads.ReverseRequest.getSizePrefixedRootAsReverseRequest = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new MyServer.Payloads.ReverseRequest).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
MyServer.Payloads.ReverseRequest.prototype.data = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
MyServer.Payloads.ReverseRequest.startReverseRequest = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} dataOffset
 */
MyServer.Payloads.ReverseRequest.addData = function(builder, dataOffset) {
  builder.addFieldOffset(0, dataOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
MyServer.Payloads.ReverseRequest.endReverseRequest = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} dataOffset
 * @returns {flatbuffers.Offset}
 */
MyServer.Payloads.ReverseRequest.createReverseRequest = function(builder, dataOffset) {
  MyServer.Payloads.ReverseRequest.startReverseRequest(builder);
  MyServer.Payloads.ReverseRequest.addData(builder, dataOffset);
  return MyServer.Payloads.ReverseRequest.endReverseRequest(builder);
}

/**
 * @constructor
 */
MyServer.Payloads.Root = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {MyServer.Payloads.Root}
 */
MyServer.Payloads.Root.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {MyServer.Payloads.Root=} obj
 * @returns {MyServer.Payloads.Root}
 */
MyServer.Payloads.Root.getRootAsRoot = function(bb, obj) {
  return (obj || new MyServer.Payloads.Root).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {MyServer.Payloads.Root=} obj
 * @returns {MyServer.Payloads.Root}
 */
MyServer.Payloads.Root.getSizePrefixedRootAsRoot = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new MyServer.Payloads.Root).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {boolean}
 */
MyServer.Payloads.Root.bufferHasIdentifier = function(bb) {
  return bb.__has_identifier('PLDE');
};

/**
 * @returns {MyServer.Payloads.AnyPayload}
 */
MyServer.Payloads.Root.prototype.payloadType = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? /** @type {MyServer.Payloads.AnyPayload} */ (this.bb.readUint8(this.bb_pos + offset)) : MyServer.Payloads.AnyPayload.NONE;
};

/**
 * @param {flatbuffers.Table} obj
 * @returns {?flatbuffers.Table}
 */
MyServer.Payloads.Root.prototype.payload = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__union(obj, this.bb_pos + offset) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
MyServer.Payloads.Root.startRoot = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {MyServer.Payloads.AnyPayload} payloadType
 */
MyServer.Payloads.Root.addPayloadType = function(builder, payloadType) {
  builder.addFieldInt8(0, payloadType, MyServer.Payloads.AnyPayload.NONE);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} payloadOffset
 */
MyServer.Payloads.Root.addPayload = function(builder, payloadOffset) {
  builder.addFieldOffset(1, payloadOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
MyServer.Payloads.Root.endRoot = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} offset
 */
MyServer.Payloads.Root.finishRootBuffer = function(builder, offset) {
  builder.finish(offset, 'PLDE');
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} offset
 */
MyServer.Payloads.Root.finishSizePrefixedRootBuffer = function(builder, offset) {
  builder.finish(offset, 'PLDE', true);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {MyServer.Payloads.AnyPayload} payloadType
 * @param {flatbuffers.Offset} payloadOffset
 * @returns {flatbuffers.Offset}
 */
MyServer.Payloads.Root.createRoot = function(builder, payloadType, payloadOffset) {
  MyServer.Payloads.Root.startRoot(builder);
  MyServer.Payloads.Root.addPayloadType(builder, payloadType);
  MyServer.Payloads.Root.addPayload(builder, payloadOffset);
  return MyServer.Payloads.Root.endRoot(builder);
}

// Exports for Node.js and RequireJS
this.MyServer = MyServer;
